---
- name: Get the current kernel release.
  command: uname -r
  changed_when: false
  register: kernel_release

- name: Ensure necessary packages are installed.
  yum:
    name:
      - wget
      - perl
      - cpp
      - gcc
      - make
      - bzip2
      - kernel-headers
      - kernel-devel
      - "kernel-devel-{{ kernel_release.stdout }}"
      - cifs-utils
    state: present

- name: Ensure libselinux-python package is installed.
  yum:
    name:
      - libselinux-python
    state: present
  when: ansible_distribution_major_version|int < 8

- name: Ensure python3-libselinux package is installed.
  yum:
    name:
      - python3-libselinux
    state: present
  when: ansible_distribution_major_version|int == 8

# Fix slow DNS.
- name: Fix slow DNS (adapted from Bento).
  lineinfile:
    dest: /etc/sysconfig/network
    regexp: '^RES_OPTIONS'
    line: 'RES_OPTIONS="single-request-reopen"'
    state: present

- name: Restart network service (explicitly).
  service:
    name: network
    state: restarted
  when: ansible_distribution_major_version|int < 8

- name: Restart NetworkManager service (explicitly).
  service:
    name: NetworkManager
    state: restarted
  when: ansible_distribution_major_version|int == 8

# SSH daemon configuration.
- name: Configure SSH daemon.
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - { regexp: '^UseDNS', line: 'UseDNS no' }
    - { regexp: '^GSSAPIAuthentication', line: 'GSSAPIAuthentication no' }

# Vagrant SSH configuration.
- name: Configure Vagrant .ssh directory.
  file:
    path: /home/vagrant/.ssh
    state: directory
    owner: vagrant
    group: vagrant
    mode: 0700

- name: Get Vagrant's public key.
  get_url:
    url: https://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub
    dest: /home/vagrant/.ssh/authorized_keys
    owner: vagrant
    group: vagrant
    mode: 0600
  ignore_errors: yes
  when: from_vagrant

- name: autolabel on boot
  shell: fixfiles onboot

- include_tasks: cloud-init.yml
  when: target_ovirt | bool

- include_tasks: ovirt.yml
  when: target_ovirt | bool

# VirtualBox tools installation.
- name: Check if VirtualBox is running the guest VM.
  stat:
    path: /home/vagrant/.vbox_version
  register: virtualbox_check

- include_tasks: virtualbox.yml
  when: virtualbox_check.stat.exists

# VMware tools installation.
- name: Check if VMWare is running the guest VM.
  shell: "cat /proc/scsi/scsi | grep VMware"
  changed_when: false
  failed_when: false
  register: vmware_check

- include_tasks: vmware.yml
  when: vmware_check.rc == 0

# Cleanup tasks.
- name: Remove unneeded packages.
  yum:
    name:
      - cpp
      - kernel-devel
      - kernel-headers
    state: absent

- name: Clean up yum.
  command: yum clean all

- name: Remove any remnants of VirtualBox ISOs.
  shell: rm -rf VBoxGuestAdditions_*.iso VBoxGuestAdditions_*.iso.?

- name: Remove RedHat interface persistence (step 1).
  shell: rm -f /etc/udev/rules.d/70-persistent-net.rules

- name: Remove RedHat interface persistence (step 2).
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-eth0
    regexp: "{{ item }}"
    state: absent
  loop:
    - '^HWADDR'
    - '^UUID'

- name: Force logs to rotate (step 1)
  shell: /usr/sbin/logrotate -f /etc/logrotate.conf

- name: Force logs to rotate (step 2)
  shell: rm -f /var/log/*-???????? /var/log/*.gz

- name: Clear audit log and wtmp (step 1)
  shell: cat /dev/null > /var/log/audit/audit.log

- name: Clear audit log and wtmp (step 2)
  shell: cat /dev/null > /var/log/wtmp